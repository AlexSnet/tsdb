#!/usr/bin/env python

import sys
import os.path

import tsdb

DB = "test_import"

type_map = {
    'ifHCInOctets': tsdb.Counter64,
    'ifHCOutOctets': tsdb.Counter64,
    'ifInOctets': tsdb.Counter32,
    'ifOutOctets': tsdb.Counter32,
    'sysUpTimeInstance': tsdb.Counter32
}

if not os.path.exists(os.path.join(DB,"TSDB")):
    db = tsdb.TSDB.create(DB, tsdb.YYYYMMChunkMapper)
else:
    db = tsdb.TSDB(DB)

for arg in sys.argv[1:]:
    (rtr,out) = arg.split(".")
    print rtr

    if rtr not in db.list_sets():
        set = db.add_set(rtr)
    else:
        set = db.get_set(rtr)

    vartab = {}
    f = open(arg, "r")
    for line in f:
        #        print line
        line = line.strip()
        if line == '':
            continue

        (tstamp, var, val) = line.split()
        tstamp = int(tstamp)
        val = int(val)

        type = type_map[var.split('.')[0]]


        if var not in vartab:
            if var not in set.list_vars():
                print "++++ CREATE"
                vartab[var] = set.add_var(var, type, 30)
            else:
                vartab[var] = set.get_var(var)

        vartab[var].insert(type(tstamp, tsdb.ROW_VALID, val))

